{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/SuccessNotification.js","components/ErrorNotification.js","App.js","index.js"],"names":["Filter","value","onChange","type","PersonForm","handleSubmit","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","Person","person","deleteContact","name","number","onClick","id","Persons","filteredContact","map","key","baseUrl","axios","get","then","res","data","newContact","post","put","delete","SuccessNotification","success","className","ErrorNotification","message","App","React","useState","persons","setPersons","setNewName","setNewNumber","search","setSearch","setSuccess","errorMessage","setErrorMessage","useEffect","contactService","initialContacts","filter","toLowerCase","includes","e","target","preventDefault","window","confirm","contact","p","update","updated","Number","concat","setTimeout","catch","error","addedContact","contactToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3580b543.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filter shown with:{' '}\n      <input type=\"search\" value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({\n  handleSubmit,\n  handleNameChange,\n  handleNumberChange,\n  newName,\n  newNumber,\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number:{' '}\n        <input type=\"tel\" value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Person = ({ person, deleteContact }) => {\n  return (\n    <p>\n      {`${person.name} ${person.number}`}{' '}\n      <button onClick={deleteContact} value={person.id}>\n        delete\n      </button>\n    </p>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ filteredContact, deleteContact }) => {\n  const numbers = () =>\n    filteredContact.map(person => (\n      <Person key={person.name} person={person} deleteContact={deleteContact} />\n    ));\n  return <div>{numbers()}</div>;\n};\n\nexport default Persons;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(res => res.data);\n};\n\nconst create = newContact => {\n  return axios.post(baseUrl, newContact).then(res => res.data);\n};\n\nconst update = (id, newContact) => {\n  return axios.put(`${baseUrl}/${id}`, newContact).then(res => res.data);\n};\n\nconst deleteContact = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, deleteContact };\n","import React from 'react';\n\nconst SuccessNotification = ({ success }) => {\n  if (success === null) {\n    return null;\n  }\n  return <div className=\"success\">{success}</div>;\n};\n\nexport default SuccessNotification;\n","import React from 'react';\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default ErrorNotification;\n","import React from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport contactService from './services/persons';\nimport SuccessNotification from './components/SuccessNotification';\nimport ErrorNotification from './components/ErrorNotification';\n\nconst App = () => {\n  const [persons, setPersons] = React.useState([]);\n  const [newName, setNewName] = React.useState('');\n  const [newNumber, setNewNumber] = React.useState('');\n  const [search, setSearch] = React.useState('');\n  const [success, setSuccess] = React.useState(null);\n  const [errorMessage, setErrorMessage] = React.useState(null);\n\n  React.useEffect(() => {\n    contactService.getAll().then(initialContacts => {\n      setPersons(initialContacts);\n    });\n  }, []);\n\n  const addContact = e => {\n    e.preventDefault();\n    if (\n      persons\n        .map(person => person.name.toLowerCase())\n        .includes(newName.toLowerCase())\n    ) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number?`\n        )\n      ) {\n        let contact = persons.filter(p => p.name === newName)[0];\n        contactService\n          .update(contact.id, { ...contact, number: newNumber })\n          .then(update => {\n            // console.log(update);\n            let updated = persons.filter(p => p.id !== Number(update.id));\n            setPersons(updated.concat(update));\n            setSuccess(`Updated ${update.name}`);\n            setTimeout(() => {\n              setSuccess(null);\n            }, 5000);\n          })\n          .catch(error => {\n            setErrorMessage(\n              `${contact.name} has already been deleted from the server`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n            setPersons(persons.filter(p => p.id !== contact.id));\n          });\n      }\n\n      return;\n    }\n    const newContact = { name: newName, number: newNumber };\n    contactService.create(newContact).then(addedContact => {\n      setPersons(persons.concat(addedContact));\n      setNewName('');\n      setNewNumber('');\n      setSuccess(`Added ${addedContact.name}`);\n      setTimeout(() => {\n        setSuccess(null);\n      }, 5000);\n    });\n  };\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const deleteContact = e => {\n    // let id = Number(e.target.value);\n    const contactToDelete = persons.filter(\n      p => p.id === Number(e.target.value)\n    )[0];\n    if (window.confirm(`Delete ${contactToDelete.name} ?`)) {\n      contactService\n        .deleteContact(contactToDelete.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== contactToDelete.id));\n          setSuccess(`Deleted ${contactToDelete.name}`);\n          setTimeout(() => {\n            setSuccess(null);\n          }, 5000);\n        })\n        .catch(error => {\n          setErrorMessage(\n            `${contactToDelete.name} has already been deleted from the server`\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n          setPersons(persons.filter(p => p.id !== contactToDelete.id));\n        });\n    } else {\n      return;\n    }\n  };\n  const filteredContact = search\n    ? persons.filter(person =>\n        person.name.toLowerCase().includes(search.toLowerCase())\n      )\n    : persons;\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification success={success} />\n      <ErrorNotification message={errorMessage} />\n      <Filter value={search} onChange={handleSearch} />\n      <h2>add new</h2>\n      <PersonForm\n        handleSubmit={addContact}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        filteredContact={filteredContact}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}